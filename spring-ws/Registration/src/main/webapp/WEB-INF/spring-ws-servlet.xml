<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    <bean id="messageReceiver"
          class="org.springframework.ws.soap.server.SoapMessageDispatcher"/>
    <bean id="schemaCollection"
          class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection">
        <property name="xsds">
            <list>
                <value>/calculator/messages.xsd</value>
            </list>
        </property>
        <property name="inline" value="true"/>
    </bean>
    <bean id="calculatorService" class="nl.ead.webservice.services.CalculatorEndpoint">
        <constructor-arg ref="marshaller"/>
        <constructor-arg ref="unmarshaller"/>
        <constructor-arg ref="moviePrinter"/>
        <constructor-arg ref="calculationDao"/>
    </bean>

    <!-- Small example of how to use a factory bean in Spring. Not really necessary for this case. -->
    <bean id="moviePrinter" factory-bean="moviePrinterFactory" factory-method="create"/>

    <bean id="moviePrinterFactory" class="nl.ead.webservice.services.MoviePrinterFactory"/>

    <bean id="calculationDao" class="nl.ead.webservice.dao.CalculationDao"/>

    <bean
            class="org.springframework.ws.server.endpoint.adapter.MarshallingMethodEndpointAdapter">
        <constructor-arg ref="marshaller"/>
    </bean>
    <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="nl.ead.webservice"/>
    </bean>
    <bean id="unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="nl.ead.webservice"/>
    </bean>
    <bean id="annotationMapping"
          class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
        <property name="interceptors">
            <list>
                <bean
                        class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
                <bean
                        class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor"/>
                <bean
                        class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
                    <property name="xsdSchemaCollection" ref="schemaCollection"/>
                    <property name="validateRequest" value="true"/>
                    <property name="validateResponse" value="true"/>
                </bean>
            </list>
        </property>
        <property name="order" value="1"/>
    </bean>
    <bean id="calculatorservice"
          class="org.springframework.ws.wsdl.wsdl11.DefaultWsdl11Definition">
        <property name="schemaCollection" ref="schemaCollection"/>
        <property name="portTypeName" value="Service"/>
        <property name="locationUri" value="http://localhost:8080/calculator"/>
        <property name="targetNamespace"
                  value="http://www.han.nl/schemas/calculator/definitions"/>
    </bean>
</beans>